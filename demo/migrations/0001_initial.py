# Generated by Django 3.1.7 on 2021-07-21 03:01

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Demo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('thumbnail', models.ImageField(upload_to='images/')),
                ('desc', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TechStackTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TechStackTaggedDemo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='demo.demo')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demo_techstacktaggeddemo_items', to='demo.techstacktag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedDemo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='demo.demo')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demo_taggeddemo_items', to='demo.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DemoImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('demo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='demo.demo')),
            ],
        ),
        migrations.AddField(
            model_name='demo',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='demo.TaggedDemo', to='demo.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='demo',
            name='team',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.team'),
        ),
        migrations.AddField(
            model_name='demo',
            name='tech_stacks',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='demo.TechStackTaggedDemo', to='demo.TechStackTag', verbose_name='Tags'),
        ),
    ]
